variables:
  SPRING_PROFILES_ACTIVE: gitlab-ci
  USER_GITLAB: quangpham1019
  PRODUCTION_BRANCH: production-pipeline-Beanstalk
  # Shared variables
  S3BUCKET: 'elasticbeanstalk-us-east-2-835421043738'
  REGION: 'us-east-2'
  AWS_ACCESS_KEY_ID: AKIA4FAXZPQNH76PLJWX
  AWS_SECRET_ACCESS_KEY: 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

  # Prod variables
  PROD_APPNAME: 'jcs'
  PROD_ENVNAME: 'Jcs-env '
  PROD_URL: 'http://jcs-env.eba-8xej79by.us-east-2.elasticbeanstalk.com/'
  PROD_LABEL: '$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID'
  PROD_S3KEY: 'Dockerrun.aws.json'
  REVIEW_S3KEY: 'Dockerrunaws-$CI_COMMIT_SHORT_SHA.json'

stages:
  - build
  - docker
  - deploy

maven-build:
  image: maven:3.9.5-amazoncorretto-17
  stage: build
  script: "mvn package -B -D skipTests"
  artifacts:
    paths:
      - target/*.jar

docker-build:
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
      DOCKER_HOST: tcp://docker:2375/
      DOCKER_DRIVER: overlay2
      # See https://github.com/docker-library/docker/pull/166
      DOCKER_TLS_CERTDIR: ""
  stage: docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$PRODUCTION_BRANCH" ]]; then
        tag=""
        echo "Running on branch '$PRODUCTION_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"

deploy_eb:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  environment:
    name: production
    url: $PROD_URL
  script:

    # Create new Dockerrun file with updated image tag
    - cp $PROD_S3KEY $REVIEW_S3KEY
    - sed -i "s/latest/$CI_COMMIT_REF_SLUG/" $REVIEW_S3KEY
    - aws s3 cp $REVIEW_S3KEY s3://$S3BUCKET

    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $REGION
    - aws elasticbeanstalk create-application-version --application-name $PROD_APPNAME --version-label $PROD_LABEL --source-bundle S3Bucket=$S3BUCKET,S3Key=$PROD_S3KEY
    - aws elasticbeanstalk update-environment --application-name $PROD_APPNAME --environment-name $PROD_ENVNAME --version-label $PROD_LABEL